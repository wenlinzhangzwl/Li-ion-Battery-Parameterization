function x = parameterization_Optimize(fun, param_opt, lb, ub, type)

    switch type
        case "LS"
            % non-linear least squares optimization. 
            options = optimoptions('lsqnonlin',...
                                         'Display', 'iter-detailed',...
                                         'PlotFcns', 'optimplotx', ...
                                         'FunctionTolerance', 1e-20, ...
                                         'OptimalityTolerance', 1e-20, ...
                                         'MaxFunctionEvaluations', 1e10, ...
                                         'MaxIterations', 20, ...
                                         'StepTolerance', 1e-16, ...
                                         'Algorithm', 'trust-region-reflective',...
                                         'UseParallel',true);

            x = lsqnonlin(fun, param_opt, lb, ub, options);
        case "PSO"
            % particle-swarm optimization. 

            options = optimoptions('particleswarm',...
                                         'Display', 'iter',...
                                         'UseParallel', true,...
                                         'InitialSwarmMatrix', param_opt', ...
                                         'PlotFcns', 'pswplotbestf', ...
                                         'SwarmSize', 2000, ...
                                         'MaxIterations', 50, ...
                                         'FunctionTolerance', 1e-20, ...
                                         'ObjectiveLimit', 1e-20, ...
                                         'MaxStallIterations', 100);%1000);

            x = particleswarm(fun, length(param_opt), lb, ub, options);
        case "GA"
            % Genetic algorithm optimization
            
            options = optimoptions('ga',...
                                   'PopInitRange', [lb; ub],...
                                   'PopulationSize', 5000,... 
                                   'Generations', 1000,...
                                   'InitialPopulation', param_opt,...
                                   'FunctionTolerance', 1e-16, ...
                                   'MaxStallGenerations', 100,...
                                   'Display', 'diagnose',...
                                   'PlotFcns', {@gaplotbestf @gaplotbestindiv},...
                                   'UseVectorized', false,...
                                   'UseParallel', true);
           nvars = length(param_opt); 
           x = ga(fun, nvars, [], [], [], [], lb, ub, [], [], options);
    end
end

